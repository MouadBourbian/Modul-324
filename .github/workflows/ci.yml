name: CI/CD Pipeline

on:
  # Automatisch bei Push und Pull Request
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

  # Automatisch bei Release
  release:
    types: [created]

  # Manuell im Actions-Tab ausführbar
  workflow_dispatch:

jobs:
  lint:
    name: Linting (ESLint)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ticketsystem/backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  test:
    name: Testing (Jest)
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ticketsystem/backend
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Verify working directory
        run: pwd && ls -l

      - name: Install dependencies
        run: npm ci

      - name: Verify Production Secrets
        run: |
          if [ -z "$MONGO_URL" ]; then
            echo "❌ MONGO_URL is not set!"
            exit 1
          else
            echo "✅ MONGO_URL is set"
          fi

          if [ -z "$PORT" ]; then
            echo "❌ PORT is not set!"
            exit 1
          else
            echo "✅ PORT is set"
          fi
        env:
          MONGO_URL: ${{ secrets.MONGO_URL }}
          PORT: ${{ vars.PORT }}

      - name: Run tests
        run: npm test
        env:
          MONGO_URL: ${{ secrets.MONGO_URL }}
          PORT: ${{ vars.PORT }}
          CI: true

  publish-gpr:
    name: Publish Package
    needs: test
    runs-on: ubuntu-latest
    # Only publish on release events
    if: github.event_name == 'release'
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ticketsystem/backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/

      - name: Install dependencies
        run: npm ci

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
